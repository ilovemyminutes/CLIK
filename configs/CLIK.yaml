# model configuration
network: "CLIK"                                                # network name (DO NOT CHANGE)
feature_dim: 128                                               # embedding dim
memory_bank_size: 512                                          # size of Memory Bank (MUST BE EQUAL TO 'matching_size')
backbone_txt: "dsksd/bert-ko-small-minimal"                    # pre-trained BERT
backbone_img: "vit_small_patch16_224_in21k"                    # pre-trained ViT
dropout: 0.1

# data configuration
target: "ctr"                                                  # user online feedback for each image (used as criterion for ranking)
partial_cats: []                                               # used to specify category during train (ex. ['digital', 'women_shoes'])
sampling_method: 'weighted'                                    # sampling method during preference discrimination ('weighted', 'random')
exhibit_attrs: [                                                  # exhibition attributes
  "exhibit_name",
  "exhibit_startdate",
  "exhibit_cat1",
  "exhibit_cat2",
  "exhibit_kwds"
  ]
prod_attrs: [                                                  # product attributes (only used for text augmentation)
  "prod_name", 
  "prod_text", 
  "prod_opendate", 
  "prod_cat1", 
  "prod_cat2", 
  "prod_cat3", 
  "prod_cat4", 
  "prod_page_title"
  ]
img_h: 224                                                     # height of image as input
img_w: 224                                                     # width of image as input
txt_max_length: 128                                            # max length of text during preprocessing
img_dir: "/YOUR_DATA_DIR/images"                               # image data directory
train_matching: "/YOUR_DATA_DIR/train_matching.csv"            # train data for Topic Matching
train_ranking: "/YOUR_DATA_DIR/train_ranking.csv"              # train data for Image Ranking
valid_matching: "/YOUR_DATA_DIR/valid_matching.csv"            # valid data for Topic Matching
valid_ranking: "/YOUR_DATA_DIR/valid_ranking.csv"              # valid data for Image Ranking
train_subsample_rate: 1.0                                      # subsample size for train
valid_subsample_rate: 1.0                                      # subsample size for valid

# train configuration
matching_size: 512                                             # batch size for semantic matching (M)
ranking_size: 20                                               # batch size for Image Ranking (K)
rankning_iter: 12                                              # num iters of Image Ranking for each step (D)
word_dropout: 0.1                                              # word dropout rate during text preprocessing for train
epochs: 10                                                     # train epochs
lr_txt: 5e-5                                                   # learning rate for text encoder
lr_img: 1e-4                                                   # learning rate for image encoder
temperature: 0.07                                              # temperature for NT-Xent Loss
p_txt_aug: 0.5                                                 # text augmentation prob (0: deactivate): 'prod_attrs' is used if activated
seed: 27                                                       # random seed

# gpu/cpu configuration
is_distributed: True                                           # usage of dist. training. If True, 'world_size' is used. If False, 'gpu_idx' is used.
world_size: 4                                                  # (distributed training) world_size for pytorch DDP
gpu_idx: 0                                                     # (single-gpu training) gpu index
num_workers: 0                                                 # num of workers for DataLoader 

# checkpoint configuration
log_save_dir: './logs/'                                        # log save directory
ckpt_load_path: None                                           # checkpoint load path
ckpt_save_dir: './ckpts/'                                      # checkpoint save directory
exp_title: 'CLIK'                                              # experiment name or contents